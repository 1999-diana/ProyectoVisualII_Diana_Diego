// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDB;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ModeloDB.Migrations
{
    [DbContext(typeof(AcademiaDB))]
    [Migration("20220207012528_inicial1")]
    partial class inicial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Modelo.Entidades.Configuracion", b =>
                {
                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("text");

                    b.Property<float>("Horas_Extras_Maxima")
                        .HasColumnType("real");

                    b.Property<float>("Horas_Extras_Minima")
                        .HasColumnType("real");

                    b.Property<float>("Salario_Horas_Extras")
                        .HasColumnType("real");

                    b.Property<float>("sueldoMaximo")
                        .HasColumnType("real");

                    b.HasKey("NombreEmpresa");

                    b.ToTable("configuracion");
                });

            modelBuilder.Entity("Modelo.Entidades.Decimo_Tercero", b =>
                {
                    b.Property<int>("Decimo_TerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PersonalId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("fecha_final")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_inicio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("meses")
                        .HasColumnType("text");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.HasKey("Decimo_TerceroId");

                    b.HasIndex("PersonalId");

                    b.ToTable("decimo_Terceros");
                });

            modelBuilder.Entity("Modelo.Entidades.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PersonalId")
                        .HasColumnType("integer");

                    b.Property<string>("direccion")
                        .HasColumnType("text");

                    b.Property<string>("nombreEmpresa")
                        .HasColumnType("text");

                    b.Property<string>("provincia")
                        .HasColumnType("text");

                    b.Property<string>("ruc")
                        .HasColumnType("text");

                    b.Property<string>("telefono")
                        .HasColumnType("text");

                    b.HasKey("EmpresaId");

                    b.HasIndex("PersonalId")
                        .IsUnique();

                    b.ToTable("empresas");
                });

            modelBuilder.Entity("Modelo.Entidades.Liquidaciones", b =>
                {
                    b.Property<int>("LiquidacionesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Estadoliq")
                        .HasColumnType("integer");

                    b.Property<int?>("PersonalId")
                        .HasColumnType("integer");

                    b.Property<string>("cesantia")
                        .HasColumnType("text");

                    b.Property<string>("periodo_pri")
                        .HasColumnType("text");

                    b.Property<string>("salario_base")
                        .HasColumnType("text");

                    b.HasKey("LiquidacionesId");

                    b.HasIndex("PersonalId")
                        .IsUnique();

                    b.ToTable("liquidaciones");
                });

            modelBuilder.Entity("Modelo.Entidades.Personal", b =>
                {
                    b.Property<int>("PersonalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cedula")
                        .HasColumnType("text");

                    b.Property<string>("Direccion")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EstadoCV")
                        .HasColumnType("integer");

                    b.Property<string>("Nombre")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasColumnType("text");

                    b.Property<DateTime>("fecha_incio")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("fecha_salida")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("salario")
                        .HasColumnType("real");

                    b.Property<int>("tipo")
                        .HasColumnType("integer");

                    b.HasKey("PersonalId");

                    b.ToTable("personales");
                });

            modelBuilder.Entity("Modelo.Entidades.Roles", b =>
                {
                    b.Property<int>("RolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("PersonalId")
                        .HasColumnType("integer");

                    b.Property<float>("anticipo")
                        .HasColumnType("real");

                    b.Property<float>("aporte_iess")
                        .HasColumnType("real");

                    b.Property<float>("comision")
                        .HasColumnType("real");

                    b.Property<float>("total")
                        .HasColumnType("real");

                    b.HasKey("RolesId");

                    b.HasIndex("PersonalId");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Modelo.Entidades.Decimo_Tercero", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Decimos_Terceros")
                        .HasForeignKey("PersonalId");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Empresa", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithOne("empresa")
                        .HasForeignKey("Modelo.Entidades.Empresa", "PersonalId");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Liquidaciones", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithOne("liquidacion")
                        .HasForeignKey("Modelo.Entidades.Liquidaciones", "PersonalId");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Roles", b =>
                {
                    b.HasOne("Modelo.Entidades.Personal", "Personal")
                        .WithMany("Roles")
                        .HasForeignKey("PersonalId");

                    b.Navigation("Personal");
                });

            modelBuilder.Entity("Modelo.Entidades.Personal", b =>
                {
                    b.Navigation("Decimos_Terceros");

                    b.Navigation("empresa");

                    b.Navigation("liquidacion");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
